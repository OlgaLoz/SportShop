@model MVC.ViewModels.User.ProfileEditViewModel

<div class="panel panel-default">
    <div class="panel-heading">
        <h3>Edit profile:</h3>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("ChangeLogin", "Profile", FormMethod.Post))
        {
            <div class="form-horizontal">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Id, new {Value = Model.Id})
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                <div class="form-group">
                    @Html.LabelFor(model => model.Login, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Login, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Login, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Change login" class="btn btn-default"/>
                    </div>
                </div>
            </div>
        }

        @using (Html.BeginForm("ChangePassword", "Profile", FormMethod.Post))
        {
            <div class="form-horizontal">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Id, new {Value = Model.Id})
                <div class="form-group">
                    @Html.LabelFor(model => model.OldPassword, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OldPassword, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.OldPassword, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConfirmPassword, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Change password" class="btn btn-default"/>
                    </div>
                </div>
            </div>
        }

    </div>
</div>

<div>
    @Html.ActionLink("Delete account", "Delete", new { page = ViewBag.Page })
</div>

@section Scripts {@Scripts.Render("~/bundles/jqueryval")}




